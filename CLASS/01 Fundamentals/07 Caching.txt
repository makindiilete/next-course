By default, nextjs cache every data you fetch using the 'fetch' function so when next you hit the same url you've
hit b4, nextjs will fetch the data from memory.

DISABLING CACHING : - You might want to disable caching because you always want to get fresh data.

import React from "react";

interface User {
  name: string;
  id: number;
  email: string;
}
const UsersPage = async () => {
  //Fetching data in server components : - We fetch directly, no useState, no useEffect, no 'handleGetUsers' function
  const res = await fetch("https://jsonplaceholder.typicode.com/users", {
      //Data will not be cached
    cache: "no-cache",
  });
  const users: User[] = await res.json();
  return (
    <>
      <h1 className="underline">Users</h1>
      <br />
      <ul>
        {users.map((user) => (
          <li key={user.id}>{user.name}</li>
        ))}
      </ul>
    </>
  );
};

export default UsersPage;


//REFRESH AT INTERVAL

import React from "react";

interface User {
  name: string;
  id: number;
  email: string;
}
const UsersPage = async () => {
  //Fetching data in server components : - We fetch directly, no useState, no useEffect, no 'handleGetUsers' function
  const res = await fetch("https://jsonplaceholder.typicode.com/users", {
    next: {
      // refetch fresh data every 10 seconds
      revalidate: 10,
    },
  });
  const users: User[] = await res.json();
  return (
    <>
      <h1 className="underline">Users</h1>
      <br />
      <ul>
        {users.map((user) => (
          <li key={user.id}>{user.name}</li>
        ))}
      </ul>
    </>
  );
};

export default UsersPage;


NOTE : - Data caching with NextJs is only implemented when you use the fetch(), if you use a 3rd party library like
axios, you will not get this benefits.
